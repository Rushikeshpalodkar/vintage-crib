name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint --if-present
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
    
    - name: Generate coverage report
      run: npm run test:coverage --if-present

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Run dependency check
      run: npx audit-ci --moderate

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Verify build output
      run: |
        echo "Checking build output..."
        ls -la public/ || echo "Public directory not found"
        echo "Build verification complete"
    
    - name: Build Docker image
      run: docker build -t vintage-crib:${{ github.sha }} .
    
    - name: Verify Docker image
      run: |
        echo "Verifying Docker image was built successfully..."
        docker images vintage-crib:${{ github.sha }}
        echo "Docker build verification complete"

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add your staging deployment commands here
    
    - name: Run integration tests
      run: |
        echo "Running integration tests on staging"
        # Add integration test commands here
        
    - name: Notify staging deployment
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "üß™ Vintage Crib Staging Deployed - ${{ github.sha }}"
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: Vintage Crib CI/CD <noreply@vintagecrib.com>
        body: |
          üß™ Staging Environment Updated!
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Author: ${{ github.actor }}
          
          üîó Staging URL: [Add your staging URL here]
          ‚úÖ Integration tests passed
          
          Ready for production deployment.

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add your production deployment commands here
    
    - name: Health check
      run: |
        echo "Running production health checks"
        # Add health check commands here
    
    - name: Send deployment success notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "‚úÖ Vintage Crib Deployment Successful - ${{ github.sha }}"
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: Vintage Crib CI/CD <noreply@vintagecrib.com>
        body: |
          üöÄ Deployment Successful!
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Commit Message: ${{ github.event.head_commit.message }}
          Author: ${{ github.actor }}
          
          üåê Live Site: https://vintage-crib.onrender.com
          üìä Admin Dashboard: https://vintage-crib.onrender.com/admin-advanced.html
          
          ‚úÖ All tests passed
          ‚úÖ Security checks completed
          ‚úÖ Build successful
          ‚úÖ Deployment completed
          
          Time: ${{ github.event.head_commit.timestamp }}
          
    - name: Send notification on failure
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "‚ùå Vintage Crib Deployment Failed - ${{ github.sha }}"
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: Vintage Crib CI/CD <noreply@vintagecrib.com>
        body: |
          ‚ùå Deployment Failed!
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Commit Message: ${{ github.event.head_commit.message }}
          Author: ${{ github.actor }}
          
          üîç Check the logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          Time: ${{ github.event.head_commit.timestamp }}